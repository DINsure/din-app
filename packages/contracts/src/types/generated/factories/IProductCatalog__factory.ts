/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IProductCatalog,
  IProductCatalogInterface,
} from "../IProductCatalog";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "matchedAmount",
        type: "uint256",
      },
    ],
    name: "closeAndMarkMatched",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
    ],
    name: "getRound",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "roundId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "trancheId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "salesStartTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "salesEndTime",
            type: "uint256",
          },
          {
            internalType: "enum IProductCatalog.RoundState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "totalBuyerPurchases",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSellerCollateral",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "matchedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stateChangedAt",
            type: "uint256",
          },
        ],
        internalType: "struct IProductCatalog.Round",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "trancheId",
        type: "uint256",
      },
    ],
    name: "getTranche",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "trancheId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "productId",
            type: "uint256",
          },
          {
            internalType: "enum IProductCatalog.TriggerType",
            name: "triggerType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "threshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maturityTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premiumRateBps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "perAccountMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "perAccountMax",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "trancheCap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "oracleRouteId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "roundIds",
            type: "uint256[]",
          },
        ],
        internalType: "struct IProductCatalog.TrancheSpec",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        internalType: "enum IProductCatalog.RoundState",
        name: "newState",
        type: "uint8",
      },
    ],
    name: "updateRoundState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IProductCatalog__factory {
  static readonly abi = _abi;
  static createInterface(): IProductCatalogInterface {
    return new Interface(_abi) as IProductCatalogInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IProductCatalog {
    return new Contract(address, _abi, runner) as unknown as IProductCatalog;
  }
}
