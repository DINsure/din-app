/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  InsuranceToken,
  InsuranceTokenInterface,
} from "../InsuranceToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "trancheId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "purchaseAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tranchePool",
        type: "address",
      },
    ],
    name: "InsuranceTokenMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "authorized",
        type: "bool",
      },
    ],
    name: "PoolAuthorized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINTER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorizedPools",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "trancheId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "purchaseAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "originalBuyer",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "isTransferable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "trancheId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "purchaseAmount",
        type: "uint256",
      },
    ],
    name: "mintInsuranceToken",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "bool",
        name: "authorized",
        type: "bool",
      },
    ],
    name: "setPoolAuthorization",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "trancheId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "purchaseAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "originalBuyer",
        type: "address",
      },
      {
        internalType: "address",
        name: "tranchePool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "mintTimestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346200043f57620026c290813803601f1991601f838184011682019460018060401b0393838710858811176200042957808492604098895283396020938491810103126200043f57516001600160a01b03811693908490036200043f576200006862000444565b91601383527f44494e20496e737572616e636520546f6b656e00000000000000000000000000848401526200009c62000444565b600d81526c44494e2d494e535552414e434560981b8582015283519683881162000429576000978854956001968781811c911680156200041e575b898210146200040a57908186849311620003b7575b50889086831160011462000356578b926200034a575b5050600019600383901b1c191690861b1788555b8151938411620003365784548581811c911680156200032b575b8782101462000317579081848695949311620002c0575b50869284116001146200025f5750879262000253575b5050600019600383901b1c191690821b1781555b8060095583805260068252848420838552825260ff8585205416156200021b575b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a69182855260068152858520848652815260ff868620541615620001e0575b855161223d9081620004658239f35b8285526006815285852090848652528484209060ff19825416179055600080516020620026a2833981519152339380a43880808080620001d1565b838052600682528484208385528252848420805460ff191682179055338385600080516020620026a28339815191528180a462000192565b0151905038806200015d565b85895286892086959093929116895b88828210620002a957505084116200028f575b505050811b01815562000171565b015160001960f88460031b161c1916905538808062000281565b83850151865588979095019493840193016200026e565b90919293508589528689208480870160051c8201928988106200030d575b9187968992969594930160051c01915b828110620002fe57505062000147565b8b8155879650889101620002ee565b92508192620002de565b634e487b7160e01b89526022600452602489fd5b90607f169062000130565b634e487b7160e01b88526041600452602488fd5b01519050388062000102565b9084899416918c80528a8d20928d5b8c828210620003a0575050841162000386575b505050811b01885562000116565b015160001960f88460031b161c1916905538808062000378565b8385015186558c9790950194938401930162000365565b9091508a8052888b208680850160051c8201928b861062000400575b918a91869594930160051c01915b828110620003f1575050620000ec565b8d81558594508a9101620003e1565b92508192620003d3565b634e487b7160e01b8b52602260045260248bfd5b90607f1690620000d7565b634e487b7160e01b600052604160045260246000fd5b600080fd5b60408051919082016001600160401b03811183821017620004295760405256fe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a7146101d257806306fdde03146101cd578063081812fc146101c8578063095ea7b3146101c357806323b872dd146101be578063248a9ca3146101b95780632f2ff15d146101b457806336568abe146101af57806342842e0e146101aa5780634b5dcd1b146101a55780636352211e146101a057806370a082311461019b57806375794a3c1461019657806375b238fc1461017d5780638c7a63ae146101915780638ce3f0401461018c57806391d148541461018757806395d89b4114610182578063a217fddf1461017d578063a22cb46514610178578063b256456914610173578063b88d4fde1461016e578063c87b56dd14610169578063cc33c87514610164578063d53913931461015f578063d547741f1461015a578063e816b393146101555763e985e9c51461015057600080fd5b6111e2565b6111a3565b611119565b6110f0565b611082565b610df8565b610d70565b610cd5565b610c18565b610972565b610b57565b610b17565b6109e5565b61098e565b610954565b6108b3565b610895565b610730565b6106c1565b61062f565b610592565b610563565b61053a565b610438565b6103dc565b6102d2565b6101ee565b6001600160e01b03198116036101e957565b600080fd5b346101e95760203660031901126101e957602060043561020d816101d7565b63ffffffff60e01b16637965db0b60e01b8114908115610233575b506040519015158152f35b6380ac58cd60e01b811491508115610265575b8115610254575b5038610228565b6301ffc9a760e01b1490503861024d565b635b5e139f60e01b81149150610246565b60005b8381106102895750506000910152565b8181015183820152602001610279565b906020916102b281518092818552858086019101610276565b601f01601f1916010190565b9060206102cf928181520190610299565b90565b346101e9576000806003193601126103d957604051908080549060019180831c928082169283156103cf575b60209283861085146103bb57858852602088019490811561039a5750600114610342575b61033e8761033281890382610d13565b604051918291826102be565b0390f35b6000805294509192917f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b83861061038957505050910190506103328261033e3880610322565b80548587015294820194810161036d565b60ff191685525050505090151560051b0190506103328261033e3880610322565b634e487b7160e01b82526022600452602482fd5b93607f16936102fe565b80fd5b346101e95760203660031901126101e95760206103fa600435611557565b6040516001600160a01b039091168152f35b600435906001600160a01b03821682036101e957565b602435906001600160a01b03821682036101e957565b346101e95760403660031901126101e95761045161040c565b60243561045d81611472565b916001600160a01b0380841690821681146104b65761048f9361048a913314908115610491575b506114ea565b611992565b005b6104b091506104a9906104a43391611158565b61118c565b5460ff1690565b38610484565b60405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608490fd5b60609060031901126101e9576001600160a01b039060043582811681036101e9579160243590811681036101e9579060443590565b346101e95761048f61054b36610505565b9161055e61055984336116d6565b6115da565b61185f565b346101e95760203660031901126101e95760043560005260066020526020600160406000200154604051908152f35b346101e95760403660031901126101e9576004356105ae610422565b60009180835260066020526105c9600160408520015461127d565b808352600660205260ff6105e0836040862061118c565b5416156105eb578280f35b8083526006602052610600826040852061118c565b805460ff1916600117905533916001600160a01b0316906000805160206121488339815191528480a438808280f35b346101e95760403660031901126101e957610648610422565b336001600160a01b038216036106645761048f90600435611458565b60405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608490fd5b346101e9576106cf36610505565b60405160208101939092906001600160401b038511848610176106fc5761048f9460405260008452611640565b610cfd565b60409060031901126101e9576004356001600160a01b03811681036101e9579060243580151581036101e95790565b346101e95761073e36610701565b60008080526006602052919060ff610776337f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f861118c565b5416156107f2576001600160a01b0382168084526008602090815260408520805460ff191660ff8515151617905590927fe36c1c5646056c35ea7cf47929401e11acbbe689ed31e681ae372723ce3621dc929081156107e4576107d89061134a565b6040519015158152a280f35b6107ed906113ca565b6107d8565b610891604861087961080333611c09565b61086b61080e611c99565b60405194859376020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b6020860152610848815180926020603789019101610276565b84017001034b99036b4b9b9b4b733903937b6329607d1b60378201520190611333565b03601f198101835282610d13565b60405162461bcd60e51b8152918291600483016102be565b0390fd5b346101e95760203660031901126101e95760206103fa600435611472565b346101e95760203660031901126101e9576001600160a01b036108d461040c565b1680156108fd57600052600360205261033e604060002054604051918291829190602083019252565b60405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608490fd5b346101e95760003660031901126101e9576020600954604051908152f35b346101e95760003660031901126101e957602060405160008152f35b346101e95760203660031901126101e957600435600052600760205260806040600020805490600181015490600281015490600360018060a01b039101541691604051938452602084015260408301526060820152f35b346101e95760803660031901126101e95761033e610a0161040c565b604435602435606435610a12611227565b336000908152600860205260409020610a3390610a2e906104a9565b611d8a565b610a476001600160a01b0385161515611dca565b610a52811515611e14565b7f38627a8226a0af37e3d56a794a20d656841da316214a9dfd9c9c7ff2c98ec7b1600954948592610a8a610a8585611e5f565b600955565b610ada610a95610d36565b86815260208101889052604081018390526001600160a01b03841660608201523360808201524260a0820152610ad5866000526007602052604060002090565b611e6e565b610ae48483611ebe565b604080516001600160a01b0393909316835260208301919091523390820152606090a46040519081529081906020820190565b346101e95760403660031901126101e957602060ff610b4b610b37610422565b60043560005260068452604060002061118c565b54166040519015158152f35b346101e9576000806003193601126103d9576040519080600190815480831c92808216928315610c0e575b60209283861085146103bb57858852602088019490811561039a5750600114610bb55761033e8761033281890382610d13565b600160005294509192917fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b838610610bfd57505050910190506103328261033e3880610322565b805485870152948201948101610be1565b93607f1693610b82565b346101e957610c2636610701565b6001600160a01b03821691338314610c945781610c53610c6492336000526005602052604060002061118c565b9060ff801983541691151516179055565b60405190151581527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b60405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b6044820152606490fd5b346101e95760203660031901126101e9576020610cf36004356116b9565b6040519015158152f35b634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b038211908210176106fc57604052565b6040519060c082016001600160401b038111838210176106fc57604052565b6001600160401b0381116106fc57601f01601f191660200190565b346101e95760803660031901126101e957610d8961040c565b610d91610422565b606435916001600160401b0383116101e957366023840112156101e957826004013591610dbd83610d55565b92610dcb6040519485610d13565b80845236602482870101116101e957602081600092602461048f9801838801378501015260443591611640565b346101e95760203660031901126101e957600435610e15816116b9565b610e1e90611fa7565b610e32816000526007602052604060002090565b90610e3c90612070565b8154610e4781612070565b926001810154610e5681612070565b926002830154610e6590612070565b90610e6f90612070565b91610e7990612070565b60039390930154610e92906001600160a01b0316611c09565b6040517f7b226e616d65223a2244494e20496e737572616e636520546f6b656e202300006020820152968796919591603e8801610ece91611333565b7f222c226465736372697074696f6e223a22496e737572616e636520706f73697481526f034b7b7103337b9103a3930b731b432960851b6020820152603001610f1691611333565b660103937bab732160cd1b8152600701610f2f91611333565b6f222c2261747472696275746573223a5b60801b81526010017f7b2274726169745f74797065223a22507572636861736520416d6f756e74222c815268113b30b63ab2911d1160b91b6020820152602901610f8991611333565b610f9290611fea565b7f7b2274726169745f74797065223a225472616e636865222c2276616c7565223a8152601160f91b6020820152602101610fcb91611333565b610fd490611fea565b7f7b2274726169745f74797065223a22526f756e64222c2276616c7565223a22008152601f0161100391611333565b61100c90611fea565b7f7b2274726169745f74797065223a224f726967696e616c204275796572222c228152673b30b63ab2911d1160c11b602082015260280161104c91611333565b61227d60f01b8152600201615d7d60f01b815260020103601f19810182526110749082610d13565b60405161033e8192826102be565b346101e95760203660031901126101e957600435600052600760205260c06040600020805490600181015490600281015460018060a01b03906005826003850154169260048501541693015493604051958652602086015260408501526060840152608083015260a0820152f35b346101e95760003660031901126101e95760206040516000805160206121a88339815191528152f35b346101e95760403660031901126101e95761048f600435611138610422565b9080600052600660205261115360016040600020015461127d565b611458565b6001600160a01b0316600090815260056020526040902090565b6001600160a01b0316600090815260036020526040902090565b9060018060a01b0316600052602052604060002090565b346101e95760203660031901126101e9576001600160a01b036111c461040c565b166000526008602052602060ff604060002054166040519015158152f35b346101e95760403660031901126101e957602060ff610b4b61120261040c565b61120a610422565b6001600160a01b039091166000908152600585526040902061118c565b6000805160206121a8833981519152600052600660205260ff6112583360008051602061218883398151915261118c565b54161561126157565b610891604861087961127233611c09565b61086b61080e611d0b565b80600052600660205260ff61129633604060002061118c565b5416156112a05750565b6112a933611c09565b6112b1611b42565b9160306112bd84611b83565b5360786112c984611b90565b5360415b600181116112ec5761089160486108798561086b8861080e8815611bbe565b90600f811690601082101561132e57611329916f181899199a1a9b1b9c1cb0b131b232b360811b901a61131f8487611ba0565b5360041c91611bb1565b6112cd565b611b6d565b9061134660209282815194859201610276565b0190565b6000805160206121a8833981519152600081815260066020529060ff61137e8460008051602061218883398151915261118c565b54161561138a57505050565b808252600660205261139f836040842061118c565b805460ff1916600117905533926001600160a01b0316916000805160206121488339815191529080a4565b6000805160206121a8833981519152600081815260066020529060ff6113fe8460008051602061218883398151915261118c565b541661140957505050565b808252600660205261141e836040842061118c565b805460ff1916905533926001600160a01b0316917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a4565b600090808252600660205260ff6113fe846040852061118c565b6000908152600260205260409020546001600160a01b031680156114935790565b60405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608490fd5b156114f157565b60405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776044820152771b995c881b9bdc88185c1c1c9bdd995908199bdc88185b1b60421b6064820152608490fd5b611560816116b9565b15611580576000908152600460205260409020546001600160a01b031690565b60405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608490fd5b156115e157565b60405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6044820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b6064820152608490fd5b9061166493929161165461055984336116d6565b61165f83838361185f565b611a4a565b1561166b57565b60405162461bcd60e51b8152602060048201526032602482015260008051602061216883398151915260448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608490fd5b6000908152600260205260409020546001600160a01b0316151590565b6116df826116b9565b15611748576116ed82611472565b9160018060a01b039081831692828516841494851561172c575b50508315611716575b50505090565b61172291929350611557565b1614388080611710565b60ff929550906104a461173e92611158565b5416923880611707565b60405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608490fd5b156117a957565b60405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b634e487b7160e01b600052601160045260246000fd5b60001981019190821161181f57565b6117fa565b906001820180921161181f57565b603001908160301161181f57565b80546001600160a01b0319166001600160a01b03909216919091179055565b9061186983611472565b6001600160a01b0383811692909182168390036118fd576118ae6118e8928216946118958615156117a2565b6118a0878483611ff9565b6118a987611950565b611172565b6118b88154611810565b90556118c381611172565b6118cd8154611824565b90556118e3856000526002602052604060002090565b611840565b6000805160206121c8833981519152600080a4565b60405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608490fd5b600081815260046020526040812080546001600160a01b03191690556001600160a01b0361197d83611472565b166000805160206121e88339815191528280a4565b8160005260046020526119a9816040600020611840565b6001600160a01b03806119bb84611472565b169116906000805160206121e8833981519152600080a4565b908160209103126101e957516102cf816101d7565b6001600160a01b0391821681529116602082015260408101919091526080606082018190526102cf92910190610299565b3d15611a45573d90611a2b82610d55565b91611a396040519384610d13565b82523d6000602084013e565b606090565b92909190823b15611b3957611a7d926020926000604051809681958294630a85bd0160e11b9a8b855233600486016119e9565b03926001600160a01b03165af160009181611b09575b50611afb57611aa0611a1a565b80519081611af65760405162461bcd60e51b8152602060048201526032602482015260008051602061216883398151915260448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608490fd5b602001fd5b6001600160e01b0319161490565b611b2b91925060203d8111611b32575b611b238183610d13565b8101906119d4565b9038611a93565b503d611b19565b50505050600190565b60405190608082016001600160401b038111838210176106fc57604052604282526060366020840137565b634e487b7160e01b600052603260045260246000fd5b80511561132e5760200190565b80516001101561132e5760210190565b90815181101561132e570160200190565b801561181f576000190190565b15611bc557565b606460405162461bcd60e51b815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b60405190606082016001600160401b038111838210176106fc57604052602a825260403660208401376030611c3d83611b83565b536078611c4983611b90565b536029905b60018211611c61576102cf915015611bbe565b600f811690601082101561132e57611c93916f181899199a1a9b1b9c1cb0b131b232b360811b901a61131f8486611ba0565b90611c4e565b6000611ca3611b42565b906030611caf83611b83565b536078611cbb83611b90565b536041905b60018211611cd3576102cf915015611bbe565b600f811690601082101561132e57611d05916f181899199a1a9b1b9c1cb0b131b232b360811b901a61131f8486611ba0565b90611cc0565b6000805160206121a8833981519152611d22611b42565b906030611d2e83611b83565b536078611d3a83611b90565b536041905b60018211611d52576102cf915015611bbe565b600f811690601082101561132e57611d84916f181899199a1a9b1b9c1cb0b131b232b360811b901a61131f8486611ba0565b90611d3f565b15611d9157565b60405162461bcd60e51b8152602060048201526011602482015270155b985d5d1a1bdc9a5e9959081c1bdbdb607a1b6044820152606490fd5b15611dd157565b60405162461bcd60e51b815260206004820152601b60248201527a43616e6e6f74206d696e7420746f207a65726f206164647265737360281b6044820152606490fd5b15611e1b57565b606460405162461bcd60e51b815260206004820152602060248201527f507572636861736520616d6f756e74206d75737420626520706f7369746976656044820152fd5b600019811461181f5760010190565b9060a0600591805184556020810151600185015560408101516002850155611eb7600180841b03611ea88160608501511660038801611840565b60808301511660048601611840565b0151910155565b6001600160a01b038116908115611f6357611ed8836116b9565b611f1f5780611ee9611f0992611172565b611ef38154611824565b90556118e3846000526002602052604060002090565b60006000805160206121c88339815191528180a4565b60405162461bcd60e51b815260206004820152601c60248201527b115490cdcc8c4e881d1bdad95b88185b1c9958591e481b5a5b9d195960221b6044820152606490fd5b606460405162461bcd60e51b815260206004820152602060248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152fd5b15611fae57565b60405162461bcd60e51b8152602060048201526014602482015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b6044820152606490fd5b62089f4b60ea1b815260030190565b6001600160a01b0390811615159182612064575b50506120165750565b61201f906116b9565b1561202657565b60405162461bcd60e51b8152602060048201526016602482015275546f6b656e206e6f74207472616e7366657261626c6560501b6044820152606490fd5b1615159050388061200d565b801561211957806000908282935b612105575061208c83610d55565b9261209a6040519485610d13565b80845281601f196120aa83610d55565b013660208701375b6120bc5750505090565b6120c590611810565b90600a906120f06120e06120da848406611832565b60ff1690565b60f81b6001600160f81b03191690565b841a6120fc8487611ba0565b530490816120b2565b92612111600a91611e5f565b93048061207e565b50604080519081016001600160401b038111828210176106fc5760405260018152600360fc1b60208201529056fe2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d4552433732313a207472616e7366657220746f206e6f6e2045524337323152653195c024b2ddd6d9b8f6c836aa52f67fe69376c8903d009b80229b3ce4425f519f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a2646970667358221220c591f082500caa6768a66055846e8d227c6fe4958a36cfb19e03814319bc604064736f6c634300081400332f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d";

type InsuranceTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InsuranceTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InsuranceToken__factory extends ContractFactory {
  constructor(...args: InsuranceTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _admin: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_admin, overrides || {});
  }
  override deploy(
    _admin: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_admin, overrides || {}) as Promise<
      InsuranceToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): InsuranceToken__factory {
    return super.connect(runner) as InsuranceToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InsuranceTokenInterface {
    return new Interface(_abi) as InsuranceTokenInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): InsuranceToken {
    return new Contract(address, _abi, runner) as unknown as InsuranceToken;
  }
}
